#! /usr/bin/tcsh -f

onintr enderr

set datapath = "/home/obs/mmm/karto/cals"
set target
set debug = 0
set freq
set flux = (0 0)
set mode = info
set dwflux = 1
set dwdist = 1
set dwtime = 1
set ra = 0
set dec = 0
set pi = 3.14159265
set distlim = $pi
set auto = 0

if ($#argv == 0) then
    echo "Documentation to follow..."
    exit 0
endif

varassign:

if ("$argv[1]" =~ 'target='*) then
    set target = `echo $argv[1] | sed 's/target=//' | tr '[a-z]' '[A-Z]'`
    shift argv; if ("$argv" == "") set argv = "finish"
else if ("$argv[1]" =~ 'freq='*) then
    set freq = `echo $argv[1] | sed 's/freq=//' | awk '{print $1*1000}'`
    shift argv; if ("$argv" == "") set argv = "finish"
else if ("argv[1]" =~ 'radec='*) then
    set ra  = `echo $argv[1] | sed 's/radec=//' | tr ',' ' ' | awk '{print $1}' | tr ':' ' ' | awk '{print (1*$1+($2/60)+($3/3600))*pi/12}' pi=$pi`
    set dec  = `echo $argv[1] | sed 's/radec=//' tr ',' ' ' | awk '{print $2}' | tr ':' ' ' | awk '{print (1*$1+($2/60)+($3/3600))*pi/180}' pi=$pi`
    shift argv; if ("$argv" == "") set argv = "finish"
else if ("$argv[1]" =~ 'distlim='*) then
    set distlim = `echo $argv[1] | sed 's/distlim=//' | awk '{print ($1*1)*pi/180}' pi=$pi`
    shift argv; if ("$argv" == "") set argv = "finish"
else if ("$argv[1]" =~ 'flux='*) then
    set flux = (`echo $argv[1] | sed 's/flux=//' | awk '{if ($1*1 < 0 || $2*1 < 0) print 1,1; else print $1*1,$2*1}'`)
    if ("$flux[1]" == "$flux[2]" && "$flux[1]" != "0") then
	echo "FATAL ERROR: Invalid flux range"
    endif
    shift argv; if ("$argv" == "") set argv = "finish"
else if ("$argv[1]" =~ 'options='*) then
    set options = `echo "$argv[1]" | sed 's/options=//g' | tr ',' ' ' | tr '[A-Z]' '[a-z]'`
    set badopt
    foreach option (`echo $options`)
	if ($option == "debug") then
	    set debug = 1
	else if ($option == "info") then
	    set mode = info
	else if ($option == "find") then
	    set mode = find
	else if ($option == "best") then
	    set mode = best
	else if ($option == "dwflux") then
	    set dwflux = 0
	else if ($option == "dwdist") then
	    set dwdist = 0
	else if ($option == "dwtime") then
	    set dwtime = 0
	else if ($option == "auto") then
	    set auto = 1
	else
	    set badopt = ($badopt $option)
	endif
    end
    if ("$badopt" != "") echo 'options='`echo $badopt | tr ' ' ','`' not recognized!'
    shift argv; if ("$argv" == "") set argv = "finish"
else
    echo "FATAL ERROR: $argv[1] not recognized..."
    exit 1
endif

if ("$argv[1]" != "finish") goto varassign

set wd = (`mktemp -d cal3XXXXX`)

if !( -e $wd) then
    echo "FATAL ERROR: Unable to create working directory, please make sure that you have read/write permissions for this area."
    exit 1
endif

if ($mode == "info") goto infocal
if ($mode == "find") goto findcal
if ($mode == "best") goto bestcal

infocal:

if ("$target" == "") then
    echo "FATAL ERROR: No target specified!"
    goto fail
endif

if ("$freq" == "") then
    echo "FATAL ERROR: No frequency specified!"
    goto fail
endif

awk '{if ($1 == target || $2 == target) print $0}' target=$target $datapath/calsdata | sort -nk7 > $wd/calinfo

if !(`wc -l $wd/calinfo | awk '{print $1}'`) then
    echo "FATAL ERROR: Target not found."
    goto fail
endif

set linemark = `awk '{print NR,(($7-freq)^2)^.5}' freq=$freq $wd/calinfo | sort -nk2 | head -n 1 | awk '{print $1}'`
set preline = `echo $linemark | awk '{print $1-1}'`
set postline = `echo $linemark | awk '{print $1+1}'`
set altcaldata = (`sed -n {$linemark}p $wd/calinfo | awk '{print $1,$2,$3,$4}'`)
if ($linemark == 1) then
    if (`wc -l $wd/calinfo | awk '{print $1}'` == 1) then
	set fluxinfo = (`head -n 1 $wd/calinfo | awk '{print $5,$7/1000,"NA"}'`)
    else
	set fluxinfo = (`sed -n 1,2p $wd/calinfo | awk '{if (NR == 1) {fl1 = $5; fr1 = $7}; if (NR == 2) {fl2 = $5; fr2 = $7}} END {sfr = exp((log(fr1)+log(fr2))/2); if (freq <= sfr) {reffreq = fr1; refflux = fl1}; if (freq > sfr) {reffreq = fr2; refflux = fl2}; print refflux,reffreq/1000,log(fl1/fl2)/log(fr1/fr2)}' freq=$freq`)
    endif
else if ($linemark == `wc -l $wd/calinfo | awk '{print $1}'`) then
    set fluxinfo = (`sed -n {$preline},{$linemark}p $wd/calinfo | awk '{if (NR == 1) {fl1=$5; fr1 = $7}; if (NR == 2) {fl2 = $5; fr2 = $7}} END {sfr = exp((log(fr1)+log(fr2))/2); if (freq <= sfr) {reffreq = fr1; refflux = fl1}; if (freq > sfr) {reffreq = fr2; refflux = fl2}; print refflux,reffreq/1000,log(fl1/fl2)/log(fr1/fr2)}' freq=$freq`)
else
    set fluxinfo = (`sed -n {$preline},{$postline}p $wd/calinfo | awk '{if (NR == 1) {fl1=$5; fr1 = $7}; if (NR == 2) {fl2 = $5; fr2 = $7}; if (NR == 3) {fl3=$5; fr3 = $7}} END {sidx1 = log(fl1/fl2)/log(fr1/fr2); sidx2 = log(fl2/fl3)/log(fr2/fr3); sfr1 = exp((log(fr1)+log(fr2))/2); sfr2 = exp((log(fr2)+log(fr3))/2); if (freq <= sfr1) {sidx = sidx1; reffreq = fr1; refflux = fl1}; if (freq >= sfr2) {sidx = sidx2; reffreq = fr3; refflux = fl3} if (freq > sfr1 && freq < sfr2) {sidx = ((sidx1*log(freq/sfr1))+(sidx2*log(sfr2/freq)))/(log(sfr2/sfr1)); reffreq = fr2; refflux = fl2}; print refflux,reffreq/1000,sidx}' freq=$freq`)
endif

echo $fluxinfo $altcaldata

goto finish

findcal:

if ("$freq" == "") then
    echo "FATAL ERROR: No frequency specified!"
    goto fail
endif

if ("$flux[2]" == 0) then
    set cals = (`awk '{print $1,$2,$3,$4,$5,$7}' $datapath/calsdata | awk '{if (cos(distlim) <= (sin($4*pi/180)*sin(dec)+cos($4*pi/180)*cos(dec)*cos(ra-($3*pi/12))) && $5 >= f1) print $1}' ra=$ra dec=$dec pi=$pi distlim=$distlim f1=$flux[1] | sort -u`)
else
    set cals = (`awk '{print $1,$2,$3,$4,$5,$7}' $datapath/calsdata | awk '{if (cos(distlim) <= (sin($4*pi/180)*sin(dec)+cos($4*pi/180)*cos(dec)*cos(ra-($3*pi/12))) && $5 >= f1 && $5 <= f2) print $1}' ra=$ra dec=$dec pi=$pi distlim=$distlim f1=$flux[1] f2=$flux[2] | sort -u`)
endif

if ("$cals[1]" == "") then
    echo "No sources found."
    goto finish
endif

set idx 
set freq = `echo $freq | awk '{print $1/1000}'`
foreach pcal ($cals)
    set calvals = (`calinfo target=$pcal freq=$freq options=auto`)
    if !("$calvals[3]" == "NA" && `echo $calvals[2] | awk '{if ((($1-freq)^2)^.5 > 0.21*freq) print "1"}' freq=$freq`) then
        if ("$flux[2]" == "0") then
	    if ("$calvals[3]" == "NA" && `echo $calvals[1] | awk '{if ($1 >= flux) print 1; else print 0}' flux=$flux[1]`) then
	        echo "Source: $calvals[4] (altname=$calvals[5])"
		echo "        flux=$calvals[1], specindex is unknown"
		echo "        RA="`echo $calvals[6] | awk '{printf "%2d:%2d:%2d.%1d\n",int($1),int($1*60)%60,int($1*3600)%60,int(100*(($1*3600)%1))}' | sed 's/ /0/g'`"  Dec="`echo $calvals[7] | awk '{printf "%2d:%2d:%2d.%1d\n",int($1),int($1*60)%60,int($1*3600)%60,int(100*(($1*3600)%1))}' | sed 's/ /0/g'`
	        @ idx++
	    else if ("$calvals[3]" != "NA" && `echo $calvals[1-3] | awk '{if (((freq/$2)^$3)*$1 >= flux) print 1; else print 0}' freq=$freq flux=$flux[1]`) then
	        echo "Source: $calvals[4] (altname=$calvals[5])"
		echo "        flux="`echo $calvals[1-3] | awk '{print int(((freq/$2)^$3)*$1*1000)/1000", specindex="int($3*1000)/1000}' freq=$freq`
		echo "        RA="`echo $calvals[6] | awk '{printf "%2d:%2d:%2d.%1d\n",int($1),int($1*60)%60,int($1*3600)%60,int(100*(($1*3600)%1))}' | sed 's/ /0/g'`"  Dec="`echo $calvals[7] | awk '{printf "%2d:%2d:%2d.%1d\n",int($1),int($1*60)%60,int($1*3600)%60,int(100*(($1*3600)%1))}' | sed 's/ /0/g'`
	        @ idx++
	    endif
	else
	    if ("$calvals[3]" == "NA" && `echo $calvals[1] | awk '{if ($1 >= f1 && $1 <= f2 ) print 1; else print 0}' f1=$flux[1] f2=$flux[2]`) then
	        echo "Source: $calvals[4] (altname=$calvals[5])"
		echo "        flux=$calvals[1], specindex is unknown"
		echo "        RA="`echo $calvals[6] | awk '{printf "%2d:%2d:%2d.%1d\n",int($1),int($1*60)%60,int($1*3600)%60,int(100*(($1*3600)%1))}' | sed 's/ /0/g'`"  Dec="`echo $calvals[7] | awk '{printf "%2d:%2d:%2d.%1d\n",int($1),int($1*60)%60,int($1*3600)%60,int(100*(($1*3600)%1))}' | sed 's/ /0/g'`
	        @ idx++
	    else if ("$calvals[3]" != "NA" && `echo $calvals[1-3] | awk '{if (((freq/$2)^$3)*$1 >= f1 && ((freq/$2)^$3)*$1 <= f2) print 1; else print 0}' freq=$freq f1=$flux[1] f2=$flux[2]`) then
	        echo "Source: $calvals[4] (altname=$calvals[5])"
		echo "        flux="`echo $calvals[1-3] | awk '{print int(((freq/$2)^$3)*$1*1000)/1000", specindex="int($3*1000)/1000}' freq=$freq`
		echo "        RA="`echo $calvals[6] | awk '{printf "%2d:%2d:%2d.%1d\n",int($1),int($1*60)%60,int($1*3600)%60,int(100*(($1*3600)%1))}' | sed 's/ /0/g'`"  Dec="`echo $calvals[7] | awk '{printf "%2d:%2d:%2d.%1d\n",int($1),int($1*60)%60,int($1*3600)%60,int(100*(($1*3600)%1))}' | sed 's/ /0/g'`
	        @ idx++
	    endif		
	endif
    endif
end

if !($idx) echo "No sources found"

goto finish

bestcal:

goto finish

finish:

if !($debug) rm -rf $wd

exit 0

enderr:

if !($debug) rm -rf $wd

exit 1
