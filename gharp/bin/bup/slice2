#!/bin/tcsh
# MATH alias
alias MATH 'set \!:1 = `echo "\!:3-$" | bc -l`'
#

if ($#argv < 5) then
        echo "Must give a "raw" gps-dataset, gps_xx, gps_yy, start time, and num-iters"
        exit(0)
endif
set vis = $1
set visx = $2
set visy = $3
set hour = $4
set maxiters = $5

set n = 0
set outfile = VIZ
set outfilex = $outfile-xx
set outfiley = $outfile-yy
set datafile = "pos-${vis}.dat"
rm -rf $datafile

while ($n < $maxiters)
	set t1=`atahourstohhmmss $hour`
	MATH hour = ( $hour + 0.002777777778 )
	set t2=`atahourstohhmmss $hour`
	set hr=`awk 'BEGIN { print substr("'"$t1"'", 1,2) }'`
	set min=`awk 'BEGIN { print substr("'"$t1"'", 4,2) }'`
	set sec=`awk 'BEGIN { print substr("'"$t1"'", 7,2) }'`
	set time=$hr-$min-$sec

	rm -rf $outfile $outfile.bm $outfile.mp $outfile.cl $outfile.cm
	rm -rf $outfilex $outfiley 

	echo uvcat vis=$vis select="time($t1,$t2)" out=$outfile
	uvcat vis=$visx select="time($t1,$t2)" out=$outfilex >& junk
	uvcat vis=$visy select="time($t1,$t2)" out=$outfiley >& junk

	# do invert, clean, restor and cgplot steps, outputs files
	if (-e $outfilex/visdata) then

		# create the cleaned image
		set lspec="line=chan,1"
		rm -rf $outfile.mp $outfile.bm $outfile.cl $outfile.cm
		invert vis=$outfilex,$outfiley $lspec map=$outfile.mp beam=$outfile.bm cell=1 imsize=1200 sup=0 >& junk
		clean map=$outfile.mp beam=$outfile.bm out=$outfile.cl niters=5 >& junk
		restor map=$outfile.mp beam=$outfile.bm model=$outfile.cl out=$outfile.cm mode=convolve fwhm=10 >& junk
		
		# write a png version of the image
		cgdisp in=$outfile.cm labtyp=arcsec device=${outfile}.png/png olay=olay >& junk
		mv $outfile.png ${vis}_$time.png

		# echo image to screen
		#cgdisp in=$outfile.cm labtyp=arcsec device=/xs olay=olay

		# get time, az, el, and chi for this snapshot
		set utazelchi = `getobsazel.rb $vis "time($t1,$t2)"` 

		# fit a point source to the cleaned image
		set offset = `imfit in=$outfile.cm object=point | grep Offset` 
		
		# append all results to a single line in output file
		set ret_val = "$offset UT,Az,El,Chi $utazelchi" 
		echo $ret_val >> $datafile
		echo $ret_val 
	endif

	@ n += 1
end

