#! /usr/bin/env casa-python
# -*- python -*-
# Copyright 2012 Peter Williams
# Licensed under the GNU General Public License version 3 or higher

# Measurement Set W-Projecting Fourier Transform and Subtract ...
# equivalent of the casa commands 'ft' and, optionally, 'uvsub', using
# w-projection in the FT stage.
#
# The model can either be a model image, or a textual table of
# sources.  Note that we are unable to use srctable format because
# we're a casa-python program and so don't have access to the
# necessary libraries. Yaargh. (The "componentlistHome" has an
# asciitocomponentlist() function but the docstring says it only
# supports AIPS "star" format, which doesn't allow for source fluxes.
# The online documentation says it supports more formats including
# ones with fluxes but it's just too much of a crapfest for me to want
# to spend time investigating.)
#
# Note that the uv subtraction/addition step is cumulative on top
# of any existing data in the CORRECTED_DATA column. So if you
# run this program twice successively on a single dataset, you'll
# subtract off double your model. The CORRECTED_DATA column can be
# reset via the 'msclearimaging' command.
#
# Usage: mswpftsub [-s|-a] <MS path> <model path>
#
# Table format:
#
# kind ra dec flux[jy] [major[arcsec] minor[arcsec] pa[deg]]

import sys, os.path, casac

def makeComponentList (mdlstream):
    from tempfile import mkdtemp
    cl = casac.homefinder.find_home_by_name ('componentlistHome').create ()

    for linenum, line in enumerate (mdlstream):
        if line[0] == '#':
            continue

        a = line.strip ().split ()

        if not len (a):
            continue

        # Fun fact: if you don't give CASA the h's and m's instead
        # of colons, it will silently give you super-wrong coordinates.
        # Why am I not surprised?

        rastr = a[1].replace (':', 'h', 1).replace (':', 'm', 1)
        decstr = a[2].replace (':', 'd', 1).replace (':', 'm', 1)
        dstr = 'J2000 %s %s' % (rastr, decstr)
        totflux = float (a[3]) # Jy

        if a[0] == 'point':
            cl.addcomponent (flux=totflux, fluxunit='Jy', polarization='Stokes',
                             dir=dstr, shape='point', freq=['LSRK', '1GHz'],
                             spectrumtype='constant', label='line#%d' % (linenum + 1))
        elif a[0] == 'gaussian':
            major = float (a[4]) # arcsec
            minor = float (a[5]) # arcsec
            pa = float (a[6]) # deg
            cl.addcomponent (flux=totflux, fluxunit='Jy', polarization='Stokes',
                             dir=dstr, shape='Gaussian', freq=['LSRK', '1GHz'],
                             spectrumtype='constant', label='line#%d' % (linenum + 1),
                             majoraxis='%farcsec' % major, minoraxis='%farcsec' % minor,
                             positionangle='%fdeg' % pa)
        else:
            print >>sys.stderr, 'error: unknown source kind "%s"' % a[0]
            print >>sys.stderr, '  from line: %s', line.strip ()
            sys.exit (1)

    tmpdir = mkdtemp (prefix='mswpftsub.')
    clpath = os.path.join (tmpdir, 'cl')
    cl.rename (clpath)
    cl.close ()

    return clpath, tmpdir


dosub = '-s' in sys.argv
if dosub:
    sys.argv.remove ('-s')

doadd = '-a' in sys.argv
if doadd:
    sys.argv.remove ('-a')

if len (sys.argv) != 3:
    print >>sys.stderr, 'Usage: mswpftsub [-s|-a] <MS path> <model path>'
    sys.exit (1)

if doadd and dosub:
    print >>sys.stderr, 'mswpftsub: usage error: you may ' \
        'only specify one of -a and -s'
    sys.exit (1)

mspath = sys.argv[1]
mdlpath = sys.argv[2]

if not os.path.isdir (mspath):
    print >>sys.stderr, 'mswpftsub: error: "%s" is not a MS directory' % mspath
    sys.exit (1)

if mdlpath == '-':
    # Source list from standard input
    # TODO: we don't clean up tmpdir if an exception is raised
    clpath, tmpdir = makeComponentList (sys.stdin)
    args = {'complist': clpath}
elif os.path.isdir (mdlpath):
    # Model image mode
    args = {'model': [mdlpath]}
    tmpdir = None
elif os.path.exists (mdlpath):
    # Source list from file on disk
    clpath, tmpdir = makeComponentList (open (mdlpath))
    args = {'complist': clpath}
else:
    print >>sys.stderr, 'mswpftsub: error: "%s" is not a model image or source list' % mdlpath
    sys.exit (1)

im = casac.homefinder.find_home_by_name ('imagerHome').create ()
im.open (mspath, usescratch=True)
im.selectvis (usescratch=True)
im.defineimage ()
im.setoptions (ftmachine='wproject', wprojplanes=128)
im.ft (**args)
im.close ()

if dosub or doadd:
    ms = casac.homefinder.find_home_by_name ('msHome').create ()
    ms.open (thems=mspath, nomodify=False)
    ms.uvsub (reverse=doadd)
    ms.close ()

if tmpdir is not None:
    from shutil import rmtree

    try:
        rmtree (tmpdir)
    except Exception:
        print >>sys.stderr, 'warning: couldn\'t clean temporary directory ' + tmpdir
