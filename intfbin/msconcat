#! /usr/bin/env casa-python
# -*- python -*-

# Quasi-FIXME: the CASA concat implementation makes sure that if any
# dataset has the "scratch" imaging columns, then all of the datasets
# have the columns added, presumably because otherwise the concat
# function dies. We ignore that for now. What a bad storage format.

import sys, os.path, casac

FREQTOL = 1e-5
DIRTOL = 1e-5

timesort = '-s' in sys.argv
if timesort:
    sys.argv.remove ('-s')

tb = casac.homefinder.find_home_by_name ('tableHome').create ()
ms = casac.homefinder.find_home_by_name ('msHome').create ()

if len (sys.argv) < 3:
    print >>sys.stderr, 'Usage: msconcat [-s] <input vises ...> <output vis>'
    sys.exit (1)

invises = sys.argv[1:-1]
outvis = sys.argv[-1]

if os.path.exists (outvis):
    print >>sys.stderr, 'msconcat: error: output "%s" already exists' % outvis
    sys.exit (1)

for invis in invises:
    if not os.path.exists (invis):
        print >>sys.stderr, 'msconcat: error: input "%s" does not exist' % invis
        sys.exit (1)

tb.open (invises[0])
tb.copy (outvis, deep=True, valuecopy=True)
tb.close ()

ms.open (outvis, nomodify=False)

for invis in invises[1:]:
    ms.concatenate (msfile=invis, freqtol=FREQTOL, dirtol=DIRTOL)

ms.writehistory (message='taskname=msconcat', origin='msconcat')
ms.writehistory (message='vis = ' + ', '.join (invises), origin='msconcat')
ms.writehistory (message='timesort = ' + 'FT'[int (timesort)], origin='msconcat')

if timesort:
    ms.timesort ()

ms.close ()
