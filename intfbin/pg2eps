#! /bin/bash
# Copyright 2012 Peter Williams
# Licensed under the GNU General Public License version 3 or higher
#
# Execute a MIRIAD task, performing correct voodoo to get its pgplot
# output to be recorded to an EPS file with user-specified
# dimensions. Painful to do correctly, of course.
#
# The only thing MIRIAD-specific about this is the device=file/vcps
# argument that's appended to the command to be run.

if [ x"$4" = x ] ; then
   echo >&2 "Usage: $0 output.eps widthPoints heightPoints command...."
   echo >&2 "An argument 'device={tmpfile}/vcps' is appended to the command line."
   exit 1
fi

outfn="$1"
shift
width="$1"
shift
height="$1"
shift

wmil=`python -c "print int(round($width * 1000./72))"`
hmil=`python -c "print int(round($height * 1000./72))"`

if [ $? != 0 ] ; then
    echo >&2 "error: suspected argument mistake."
    echo >&2 "Usage: $0 output.eps widthPoints heightPoints command..."
    exit 1
fi

pstmp=`mktemp pg2eps.XXXXXXXXXX`
epstmp=`mktemp pg2eps.XXXXXXXXXX`

# Run the miriad command

echo PGPLOT_PS_HOFFSET=0 PGPLOT_PS_VOFFSET=0 \
PGPLOT_PS_WIDTH=$wmil PGPLOT_PS_HEIGHT=$hmil \
PGPLOT_PS_BBOX=MAX

PGPLOT_PS_HOFFSET=0 PGPLOT_PS_VOFFSET=0 \
PGPLOT_PS_WIDTH=$wmil PGPLOT_PS_HEIGHT=$hmil \
PGPLOT_PS_BBOX=MAX \
"$@" device="$pstmp/vcps"

# Convert PS to EPS with correct sizing

gs -q -dNOPAUSE -dSAFER -dBATCH -sDEVICE=epswrite \
 -dDEVICEWIDTHPOINTS=$width -dDEVICEHEIGHTPOINTS=$height \
 -sOutputFile="$epstmp" -f "$pstmp"
sed -e "s/^%%\(.*\)BoundingBox:.*/%%\1BoundingBox: 0 0 $width $height/" \
 <"$epstmp" >"$outfn"
rm -f "$pstmp" "$epstmp"
