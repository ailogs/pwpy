#! /usr/bin/env python
# -*- python -*-
#
# Merge multiple tables of gain uncertainties into one table with many columns

import sys


# Read in files individually

data = {}
idx = 0
lens = []
alltypes = set ()

for tabfn in sys.argv[1:]:
    firstn = None

    for l in file (tabfn, 'r'):
        a = l.strip ().split ()
        n = len (a) - 3

        if firstn is None:
            firstn = n
            lens.append (n)
        elif n != firstn:
            raise Exception ('Unexpected change in number of columns in table ' + tabfn)

        antpol = (int (a[0]), a[1])
        etype = a[2]
        vals = map (float, a[3:])

        alltypes.add (etype)

        if antpol in data:
            bytype = data[antpol]
        else:
            bytype = data[antpol] = {}

        if etype in bytype:
            byidx = bytype[etype]
        else:
            byidx = bytype[etype] = {}

        byidx[idx] = vals
    idx += 1

nfiles = idx


# String together arrays, putting blanks for entries missing from a given file

for bytype in data.itervalues ():
    for etype in bytype.keys ():
        byidx = bytype[etype]
        arr = []

        for i in xrange (nfiles):
            if i not in byidx:
                v = [None] * lens[i]
            else:
                v = byidx[i]
            arr += v

        bytype[etype] = arr


# Print it all out

def f (x):
    if x is None:
        return '-'
    return '%.8g' % x

for antpol in sorted (data.iterkeys ()):
    bytype = data[antpol]

    for etype, arr in bytype.iteritems ():
        print antpol[0], antpol[1], etype,
        for x in arr:
            print f (x),
        print
