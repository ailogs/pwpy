#! /bin/tcsh -f
#
# Create a new analysis directory for processing hex-style observations.
# The only work done here is to "shadow" the data into the analysis
# directory. The next step is to flag and calibrate the data with 
# hex-proc-prep.

# Uncomment to debug the commands executed by this script
#set echo = 1

# Make sure the shell environment is set up
source `dirname $0`/hex-lib-checkenv

if ($#argv < 2) then
    echo "Usage: [vis1] [vis2 ...]     [analysis dir]"
    echo "E.g.:  hex-3c48-hp7-p*-1430a work"
    exit 1
endif

set workdir = ${argv[$#argv]}
mkdir -p $workdir


# Try to avoid overwriting existing datasets

if (-e $workdir/data-rawdata.txt) then
    echo "Error: Analysis directory $workdir seems to have already been created."
    echo "       (Remove $workdir/data-rawdata.txt to override this check.)"
    exit 1
endif


# Shadow the raw datasets into the work directory
#
# FIXME: this is where we should do sanity-checking on the input data:
# that they are all of the same field at the same frequency, we're only
# dealing with one timechunk of data (if indeed that restriction is to be
# imposed on hex obs analysis), etc.

set old = `pwd`
@ n = 0
@ nvis = $#argv - 1
set vises = (${argv[1-$nvis]})

foreach vis ($vises)
    set vis = `cd $vis ; pwd`
    set vdup = vis`printf %02d $n`

    if (-d $workdir/$vdup) then
	echo "Error: shadowed dataset $workdir/$vdup already exists."
	exit 1
    endif

    echo "Shadow $vis -> $workdir/$vdup"
    echo $vis >>$workdir/data-rawdata.txt
    mkdir $workdir/$vdup
    cd $workdir/$vdup

    foreach fb (`cd $vis && ls -1`)
	set fn = $vis/$fb

	if ($fb == visdata) then
	    ln -s $fn visdata
	else
	    cp -a $fn .
	endif
    end

    @ n = $n + 1
    cd $old
end

exit 0
